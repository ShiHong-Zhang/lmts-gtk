#############################################################################
# Makefile for building: dopr8
# Generated by qmake (2.01a) (Qt 4.7.2) on: ?? 8? 12 10:34:51 2011
# Project:  dopr8.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -o Makefile dopr8.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CPP           = g++
CXX           = gcc
CFLAGS = -Wall -g			\
	`pkg-config gtk+-2.0 gstreamer-0.10 gstreamer-plugins-base-0.10 --cflags`

LFLAGS = -Wall -g			\
	-L/usr/lib/lua/5.1 -llua5.1 -lusb	\
	`pkg-config gtk+-2.0 gstreamer-0.10 gstreamer-plugins-base-0.10 --cflags --libs gthread-2.0`


#CXXFLAGS      =  -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      =  $(CFLAGS)
INCPATH       = -I. -Ioperate -I/usr/include/lua5.1
LIB           = -L/usr/lib/lua/5.1 -llua5.1
LINK          = g++
AR            = ar cqs
RANLIB        = 
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = brace.c \
		callbacks.c \
		main.c \
		ui.c \
		operate/audio.c \
		operate/audio_crs_zb.c \
		operate/battery.c \
		operate/burnmac.c \
		operate/ckec.c \
		operate/ckntp.c \
		operate/ckpmon.c \
		operate/ckrom.c \
		operate/cmos.c \
		operate/cpu_memcap.c \
		operate/fanstem.c \
		operate/keyboard.c \
		operate/lan.c \
		operate/lcdwave.c \
		operate/ntp.c \
		operate/scanmbsn.c \
		operate/scanpsn.c \
		operate/sdcard.c \
		operate/touchpad.c \
		operate/upload.c \
		operate/usb.c \
		operate/vgaout.c \
		operate/webcam.c \
		operate/color.c \
		operate/register.c \
		operate/wifi.c	\
		operate/sata.c	\
		operate/idcard.c	\
		operate/scrn_prcn.c	\
		operate/ledlight.c	\
		operate/cpu.c	\
		operate/hd.c	\
		operate/control.c	\
		operate/videoram.c

OBJECTS       = brace.o \
		callbacks.o \
		main.o \
		ui.o \
		operate/audio.o \
		operate/audio_crs_zb.o \
		operate/battery.o \
		operate/burnmac.o \
		operate/ckec.o \
		operate/ckntp.o \
		operate/ckpmon.o \
		operate/ckrom.o \
		operate/cmos.o \
		operate/cpu_memcap.o \
		operate/fanstem.o \
		operate/keyboard.o \
		operate/lan.o \
		operate/lcdwave.o \
		operate/ntp.o \
		operate/scanmbsn.o \
		operate/scanpsn.o \
		operate/sdcard.o \
		operate/touchpad.o \
		operate/upload.o \
		operate/usb.o \
		operate/vgaout.o \
		operate/webcam.o \
		operate/color.o \
		operate/register.o \
		operate/wifi.o	\
		operate/sata.o	\
		operate/idcard.o	\
		operate/scrn_prcn.o	\
		operate/ledlight.o	\
		operate/cpu.o	\
		operate/hd.o	\
		operate/control.o	\
		operate/videoram.o

QMAKE_TARGET  = dopr8
DESTDIR       = 
TARGET        = lmts

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core *.o $(TARGET)


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

brace.o: brace.c types.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o brace.o brace.c

callbacks.o: callbacks.c types.h \
		brace.h \
		operate/items.h \
		ui.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o callbacks.o callbacks.c

main.o: main.c types.h \
		brace.h \
		callbacks.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o main.o main.c

ui.o: ui.c types.h \
		brace.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ui.o ui.c

audio.o: operate/audio.c types.h \
		brace.h operate/items.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/audio.o operate/audio.c

audio_crs_zb.o: operate/audio_crs_zb.c types.h \
		brace.h operate/items.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/audio_crs_zb.o operate/audio_crs_zb.c

battery.o: operate/battery.c types.h \
		brace.h operate/items.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/battery.o operate/battery.c

burnmac.o: operate/burnmac.c types.h \
		brace.h operate/items.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/burnmac.o operate/burnmac.c

ckec.o: operate/ckec.c types.h \
		brace.h operate/items.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/ckec.o operate/ckec.c

ckntp.o: operate/ckntp.c types.h \
		brace.h operate/items.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/ckntp.o operate/ckntp.c

ckpmon.o: operate/ckpmon.c types.h \
		brace.h operate/items.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/ckpmon.o operate/ckpmon.c

ckrom.o: operate/ckrom.c types.h \
		brace.h operate/items.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/ckrom.o operate/ckrom.c

cmos.o: operate/cmos.c types.h \
		brace.h operate/items.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/cmos.o operate/cmos.c

cpu_memcap.o: operate/cpu_memcap.c brace.h \
		types.h operate/items.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/cpu_memcap.o operate/cpu_memcap.c

fanstem.o: operate/fanstem.c brace.h \
		types.h operate/items.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/fanstem.o operate/fanstem.c

keyboard.o: operate/keyboard.c brace.h \
		types.h operate/items.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/keyboard.o operate/keyboard.c

lan.o: operate/lan.c brace.h \
		types.h operate/items.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/lan.o operate/lan.c

lcdwave.o: operate/lcdwave.c brace.h \
		types.h operate/items.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/lcdwave.o operate/lcdwave.c

ntp.o: operate/ntp.c types.h \
		brace.h operate/items.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/ntp.o operate/ntp.c

scanmbsn.o: operate/scanmbsn.c brace.h \
		types.h operate/items.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/scanmbsn.o operate/scanmbsn.c

scanpsn.o: operate/scanpsn.c brace.h \
		types.h operate/items.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/scanpsn.o operate/scanpsn.c

sdcard.o: operate/sdcard.c brace.h \
		types.h operate/items.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/sdcard.o operate/sdcard.c

touchpad.o: operate/touchpad.c brace.h \
		types.h operate/items.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/touchpad.o operate/touchpad.c

upload.o: operate/upload.c brace.h \
		types.h operate/items.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/upload.o operate/upload.c

usb.o: operate/usb.c brace.h \
		types.h operate/items.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/usb.o operate/usb.c

vgaout.o: operate/vgaout.c brace.h \
		types.h operate/items.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/vgaout.o operate/vgaout.c

webcam.o: operate/webcam.c brace.h \
		types.h operate/items.h operate/color.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/webcam.o operate/webcam.c

color.o: operate/color.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/color.o operate/color.c

wifi.o: operate/wifi.c brace.h \
		types.h operate/items.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/wifi.o operate/wifi.c

sata.o: operate/sata.c brace.h \
		types.h operate/items.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/sata.o operate/sata.c

idcard.o: operate/idcard.c brace.h \
		types.h operate/items.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/idcard.o operate/idcard.c

scrn_prcn.o: operate/scrn_prcn.c brace.h \
		types.h operate/items.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/scrn_prcn.o operate/scrn_prcn.c

ledlight.o: operate/ledlight.c brace.h \
		types.h operate/items.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/ledlight.o operate/ledlight.c

register.o: operate/register.c brace.h \
		types.h operate/items.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/register.o operate/register.c

cpu.o: operate/cpu.c brace.h \
		types.h operate/items.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/cpu.o operate/cpu.c

hd.o: operate/hd.c brace.h \
		types.h operate/items.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/hd.o operate/hd.c

control.o: operate/control.c brace.h \
		types.h operate/items.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/control.o operate/control.c

videoram.o: operate/videoram.c brace.h \
		types.h operate/items.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o operate/videoram.o operate/videoram.c

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

